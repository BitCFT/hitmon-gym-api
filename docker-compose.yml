version: '3'

services:
  app:
    build: .
    restart: always
    volumes:
      - .:/usr/src/app
    ports:
      - '$PORT:$PORT'
    env_file:
      - .env
    command: bash -c "npx prisma migrate deploy && npx prisma generate && npx prisma db seed && npm run build && npm run start:$API_START_ARG"
    networks:
      - containers-network
    depends_on:
      - db
      - rabbitmq

  db:
    image: postgres:14
    restart: unless-stopped
    env_file:
      - .env
    networks:
      - containers-network
    volumes:
      - postgres-db-data:/var/lib/postgresql/data
    ports:
      - '$DB_PORT:$DB_PORT'
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}

  rabbitmq:
    image: rabbitmq:3-management
    restart: always
    env_file:
      - .env
    ports:
      - '$RABBITMQ_PORT:$RABBITMQ_PORT'
      - '$RABBITMQ_ERLANG_PORT:$RABBITMQ_ERLANG_PORT'
    networks:
      - containers-network
    volumes:
      - rabbitmq-data:/var/lib/rabbitmq/
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_DEFAULT_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_DEFAULT_PASS}

volumes:
  postgres-db-data:
    driver: local
  rabbitmq-data:
    driver: local
networks:
  containers-network:
